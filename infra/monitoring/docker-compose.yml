version: '3'

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
     
  prometheus:
    image: prom/prometheus:v2.28.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - soft-proxy

  prometheus-msteams:
    image: quay.io/prometheusmsteams/prometheus-msteams
    container_name: prometheus-msteams
    ports:
      - 2000:2000
    environment:
      - TEAMS_INCOMING_WEBHOOK_URL=$WEBHOOK
      - TEAMS_REQUEST_URI=alertmanager
    restart: unless-stopped
    networks:
      - soft-proxy

  alertmanager:
    image: prom/alertmanager:v0.20.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports: 
      - 9093:9093
    networks:
      - soft-proxy

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports: 
      - 9100:9100
    networks:
      - soft-proxy

  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.34.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    devices:
      - /dev/kmsg:/dev/kmsg
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - soft-proxy

  nginxexporter:
    image: nginx/nginx-prometheus-exporter:0.9.0
    container_name: nginxexporter
    #environment:
    #  - SCRAPE_URI=http://$IP_SERVER/nginx_status
    command:
      - -nginx.scrape-uri
      - http://192.168.1.48/nginx_status
    #restart: unless-stopped
    #ports: 
    #  - 9113:9113
    networks:
      - soft-proxy

  pushgateway:
    image: prom/pushgateway:v1.2.0
    container_name: pushgateway
    restart: unless-stopped
    ports: 
      - 9901:9901
    networks:
      - soft-proxy

  grafana:
    #image: grafana/grafana:6.7.2
    image: grafana/grafana:latest
    container_name: grafana
    env_file:
      - .env
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=$ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD=$ADMIN_PASSWORD
      - GF_SERVER_ROOT_URL=‘%(protocol)s://liberum.local.test/grafana’
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    restart: unless-stopped
    ports: 
      - 3000:3000
    networks:
      - soft-proxy

networks:
  soft-proxy:
    external: true